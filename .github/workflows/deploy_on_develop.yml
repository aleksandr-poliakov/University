name: Deploy on develop

on:
  pull_request_target:
    branches: [ "develop" ]
    types:
      - closed
  pull_request:
    branches: [ "develop" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Test
        run: mvn test

  deploy:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build docker image with maven
        run: |
          mvn clean install -U
          mvn package spring-boot:build-image -Dspring-boot.build-image.imageName=university/uni-be

      - name: Log into registry
        run: echo "${{ secrets.GIT_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Docker create and push image
        run: |
          DOCKER_IMAGE=ghcr.io/${{ secrets.OWNER }}/university/uni-be
          VERSION=dev-${GITHUB_RUN_NUMBER}
          DOCKER_IMAGE=$(echo $DOCKER_IMAGE | tr '[A-Z]' '[a-z]')
          docker build -t $DOCKER_IMAGE .
          docker tag $DOCKER_IMAGE $DOCKER_IMAGE:$VERSION
          docker push $DOCKER_IMAGE:$VERSION

      - name: Copy university-dev.yaml
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "university-dev.yaml"
          target: "/root"

      - name: Set env and deploy
        uses: appleboy/ssh-action@master
        env:
          APP_HOST: ${{ secrets.APP_HOST }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        with:
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: APP_HOST,GITHUB_RUN_NUMBER
          script: |
            VERSION=dev-${GITHUB_RUN_NUMBER}
            echo "" > ENV_FILE_RE
            echo "IMAGE_TAG=$VERSION" >> ENV_FILE_RE
            echo "APP_HOST=$APP_HOST" >> ENV_FILE_RE
            export $(xargs < ENV_FILE_RE)
            docker stack deploy --with-registry-auth -c university-dev.yaml university-dev
